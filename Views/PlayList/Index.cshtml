@model TaskHub.Models.Playlist.StationDaySelectionViewModel
@using System.Globalization
@using Microsoft.AspNetCore.Mvc.TagHelpers

@{
    ViewData["Title"] = "Станції та дати";
    var daysCount = (Model.EndDate - Model.StartDate).Days + 1;
    var dates = Enumerable.Range(0, daysCount)
        .Select(offset => Model.StartDate.AddDays(offset))
        .ToList();
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>

<style>
    /* ... ваші стилі залишаються без змін ... */
    .cell-checkbox {
        display: none;
    }

    .cell-label {
        display: block;
        width: 100%;
        height: 100%;
        padding: 10px;
        cursor: pointer;
        background-color: #f8f9fa;
        border-radius: 4px;
        transition: background-color 0.2s;
        text-align: center;
    }

    .cell-checkbox:checked + .cell-label {
        background-color: #0d6efd;
        color: white;
        font-weight: bold;
    }

    td {
        padding: 0 !important;
        vertical-align: middle;
    }

    th.date-header {
        background-color: #cce5ff;
        color: #004085;
        font-weight: bold;
        text-align: center;
    }

    th.weekend-header {
        background-color: #ffd6d6;
        color: #8b0000;
        font-weight: bold;
    }

    td.weekend {
        background-color: #ffecec;
    }
</style>

<div class="container mt-4">
    <h2 class="mb-4">Вибір днів для станцій</h2>

    <div class="progress mt-3" style="height: 25px;">
        <div id="progressBar" class="progress-bar" role="progressbar" style="width: 0%">0%</div>
    </div>

    <form id="dateForm" method="get" class="row g-3 mb-4">
        <div class="col-md-4">
            <label for="startDate" class="form-label">Початкова дата</label>
            <input type="date" id="startDate" name="startDate" class="form-control"
                   value="@Model.StartDate.ToString("yyyy-MM-dd")" onchange="this.form.submit()" />
        </div>
        <div class="col-md-4">
            <label for="endDate" class="form-label">Кінцева дата</label>
            <input type="date" id="endDate" name="endDate" class="form-control"
                   value="@Model.EndDate.ToString("yyyy-MM-dd")" onchange="this.form.submit()" />
        </div>
    </form>

    <form id="playlistForm">
        <input type="hidden" name="StartDate" value="@Model.StartDate.ToString("yyyy-MM-dd")" />
        <input type="hidden" name="EndDate" value="@Model.EndDate.ToString("yyyy-MM-dd")" />
        <input type="hidden" id="sessionId" name="sessionId" value="" />

        <div style="overflow-x: auto; width: 100%;">
            <table class="table table-bordered" style="min-width: max-content;">
                <thead>
                    <tr>
                        <th>Станція</th>
                        @foreach (var date in dates)
                        {
                            var isWeekend = date.DayOfWeek == DayOfWeek.Saturday || date.DayOfWeek == DayOfWeek.Sunday;
                            var weekendClass = isWeekend ? "weekend-header" : "date-header";
                            <th class="@weekendClass">@date.ToString("dd.MM", CultureInfo.InvariantCulture)</th>
                        }
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.Stations.Count; i++)
                    {
                        var station = Model.Stations[i];
                        <tr>
                            <td class="station-name" data-index="@i" style="cursor:pointer;">
                                @station.StationName
                                <input type="hidden" name="Stations[@i].WorkStationID" value="@station.WorkStationID" />
                                <input type="hidden" name="Stations[@i].StationName" value="@station.StationName" />
                            </td>
                            @foreach (var date in dates)
                            {
                                var formattedDate = date.ToString("yyyy-MM-dd");
                                var checkboxId = $"chk_{i}_{date:yyyyMMdd}";
                                var isChecked = station.SelectedDates.Contains(date.Date);
                                var isWeekend = date.DayOfWeek == DayOfWeek.Saturday || date.DayOfWeek == DayOfWeek.Sunday;
                                var weekendClass = isWeekend ? "weekend" : "";

                                <td class="text-center @weekendClass">
                                    <input type="checkbox"
                                           class="cell-checkbox"
                                           id="@checkboxId"
                                           name="Stations[@i].SelectedDates"
                                           value="@formattedDate"
                                    @(isChecked ? "checked" : "") />
                                    <label class="cell-label" for="@checkboxId">--</label>
                                </td>
                            }
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div class="mt-3">
            <button type="button" class="btn btn-success" id="generateBtn">Зберегти вибір</button>
        </div>

        <div id="successMessage" class="alert alert-success mt-3" style="display: none;">
            Дані успішно відправлено на генерацію плейлисту!
        </div>

        <div id="errorMessage" class="alert alert-danger mt-3" style="display: none;">
        </div>
    </form>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const stationNames = document.querySelectorAll(".station-name");
        stationNames.forEach(cell => {
            cell.addEventListener("click", function () {
                const index = this.getAttribute("data-index");
                const checkboxes = document.querySelectorAll(`input[name="Stations[${index}].SelectedDates"]`);
                checkboxes.forEach(cb => cb.checked = true);
            });
        });

        const generateBtn = document.getElementById("generateBtn");
        const progressBar = document.getElementById("progressBar");
        const successMessage = document.getElementById("successMessage");
        const errorMessage = document.getElementById("errorMessage");

        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/progressHub")
            .build();

        connection.start().then(() => {
            document.getElementById("sessionId").value = connection.connectionId;
        }).catch(err => {
            console.error(err.toString());
            errorMessage.innerText = "Не вдалося підключитися до сервісу оновлень. Перезавантажте сторінку.";
            errorMessage.style.display = "block";
        });

        connection.on("ReceiveProgress", function (progress) {
            progressBar.classList.remove("bg-danger");
            progressBar.classList.add("bg-info");
            progressBar.style.width = progress + "%";
            progressBar.innerText = progress + "%";

            if (progress === 100) {
                progressBar.classList.remove("bg-info");
                progressBar.classList.add("bg-success");
                generateBtn.disabled = false;
                generateBtn.innerText = "Зберегти вибір";
            }
        });

        // НОВИЙ ОБРОБНИК ДЛЯ ПОМИЛОК SIGNALR
        connection.on("ReceiveError", function (message) {
            console.error("SignalR Error:", message);

            // 1. Показуємо повідомлення про помилку
            errorMessage.innerText = message;
            errorMessage.style.display = "block";
            successMessage.style.display = "none";

            // 2. Фарбуємо прогрес-бар у червоний
            progressBar.style.width = "100%";
            progressBar.innerText = "Помилка!";
            progressBar.classList.remove("bg-info", "bg-success");
            progressBar.classList.add("bg-danger");

            // 3. Розблоковуємо кнопку, щоб можна було спробувати ще раз
            generateBtn.disabled = false;
            generateBtn.innerText = "Спробувати ще раз";
        });

        generateBtn.addEventListener("click", function () {
            // --- Підготовка до нового запиту ---
            // Блокуємо кнопку для уникнення повторних натискань
            generateBtn.disabled = true;
            generateBtn.innerText = "Генерація...";

            // Скидаємо повідомлення та прогрес-бар
            successMessage.style.display = "none";
            errorMessage.style.display = "none";
            progressBar.style.width = "0%";
            progressBar.innerText = "0%";
            progressBar.classList.remove("bg-danger", "bg-success", "bg-info");
            // ------------------------------------

            const form = document.getElementById("playlistForm");
            const formData = new FormData(form);

            fetch('/PlayList/RegeneratePlaylist', {
                method: 'POST',
                body: formData
            })
            .then(res => {
                if (!res.ok) {
                    // Якщо сервер повернув помилку (статус не 2xx)
                    return Promise.reject(`Помилка сервера: ${res.status} ${res.statusText}`);
                }
                return res.json();
            })
            .then(data => {
                if (data.success) {
                    successMessage.style.display = "block";
                } else {
                    // Якщо сервер повернув JSON, але з помилкою
                    return Promise.reject(data.message || 'Невідома помилка під час запуску.');
                }
            })
            .catch(err => {
                // Обробка будь-яких помилок, що сталися вище   
                errorMessage.innerText = "Не вдалося запустити генерацію: " + err;
                errorMessage.style.display = "block";

                // Розблоковуємо кнопку, оскільки процес не розпочався
                generateBtn.disabled = false;
                generateBtn.innerText = "Зберегти вибір";
            });
        });
    });
</script>